# Generated by Django 2.2 on 2020-08-08 07:28

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


def apply_migration(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Group.objects.bulk_create([
        Group(name=u'Student'),
        Group(name=u'Assistant'),
        Group(name=u'Coordinator'),
        Group(name=u'Guide'),
    ])


def revert_migration(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Group.objects.filter(
        name__in=[
            u'Student',
            u'Assistant',
            u'Coordinator',
            u'Guide',
        ]
    ).delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254,
                                            unique=True, verbose_name='email')),
                ('first_name', models.CharField(
                    max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True,
                                               max_length=50, null=True, verbose_name='last name')),
                ('profile_photo', models.ImageField(blank=True, null=True,
                                                    upload_to='profile_photos/', verbose_name='profile photo')),
                ('is_staff', models.BooleanField(
                    default=False, verbose_name='is staff')),
                ('is_active', models.BooleanField(
                    default=True, verbose_name='is active')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), (
                    'R', 'Rejected')], default='P', max_length=4, verbose_name='status')),
                ('category', models.CharField(choices=[('P', 'Project'), ('CL', 'Change leader'), (
                    'RS', 'Remove student')], default='P', max_length=50, verbose_name='category')),
                ('created', models.DateTimeField(
                    auto_now=True, verbose_name='created')),
                ('last_modified', models.DateTimeField(
                    auto_now_add=True, null=True, verbose_name='last modified')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('due', models.DateTimeField(
                    blank=True, null=True, verbose_name='due on')),
                ('posted', models.DateTimeField(
                    auto_now=True, verbose_name='posted on')),
                ('description', models.TextField(
                    blank=True, null=True, verbose_name='description')),
                ('weightage', models.IntegerField(
                    blank=True, default=0, verbose_name='weightage')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('by', models.EmailField(max_length=254, verbose_name='by')),
                ('posted', models.DateTimeField(
                    auto_now=True, verbose_name='posted')),
                ('content', models.TextField(verbose_name='content')),
            ],
        ),
        migrations.CreateModel(
            name='Assistant',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                  parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('api.user',),
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                  parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('api.user',),
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                  parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('initials', models.CharField(max_length=50,
                                              unique=True, verbose_name='initials')),
                ('area_of_interest', jsonfield.fields.JSONField()),
                ('thrust_area', models.CharField(choices=[('NS', 'Network and Security'), ('AD', 'Application Development'), (
                    'IM', 'Information Management'), ('KS', 'Knowledge-based systems')], default='NS', max_length=50, verbose_name='thrust area')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.user',),
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                  parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('roll_number', models.IntegerField(
                    unique=True, verbose_name='roll number')),
                ('branch', models.CharField(choices=[('IT', 'Information Technology'), ('CS', 'Computer Science'), ('Mech', 'Mechanical'), (
                    'EXTC', 'Electronics And Telecommunication'), ('ETRX', 'Electronics')], default='IT', max_length=4, verbose_name='branch')),
            ],
            options={
                'abstract': False,
            },
            bases=('api.user',),
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='user_files/', verbose_name='file')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                 to='api.Assignment', verbose_name='assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('approval', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.DO_NOTHING, to='api.Approval', verbose_name='approval')),
                ('leader', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='+', to='api.Student', verbose_name='leader')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='team',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Team', verbose_name='team'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('domain', models.CharField(choices=[('CS', 'Cyber Security (Forensics, Blockchain Technology, Biometrics Security, Cryptographic Techniques)'), ('IP', 'Image Processing (Computer Vision)'), ('AI', 'Artifical Intelligence (Machine Learning, Natural Language Processing, Robotics)'), ('CN', 'Computer Networking'), ('BD', 'Big Data Processing'), (
                    'EHIA', 'Embedded and Hardware Integrated Applications (IOT)'), ('ARVR', 'Augmented Reality and Virtual Reality'), ('GIS', 'GIS'), ('CLOUD', 'Cloud Computing (High Performance Computing)'), ('SP', 'System Programming (Compiler construction, OS, Device drivers)'), ('QC', 'Quantum Computing'), ('STA', 'Software Testing Automation'), ('OTHER', 'Other')], default='AI', max_length=500, verbose_name='domain')),
                ('category', models.CharField(choices=[('IN', 'Internal'), ('EX', 'External'), (
                    'ID', 'Inter-disciplinary')], default='IN', max_length=50, verbose_name='category')),
                ('explanatory_field', models.TextField(
                    blank=True, null=True, verbose_name='explanatory field')),
                ('description', models.TextField(verbose_name='description')),
                ('approval', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE, to='api.Approval', verbose_name='approval')),
                ('students', models.ForeignKey(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='api.Student', verbose_name='students')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.IntegerField(
                    blank=True, default=0, verbose_name='marks obtained')),
                ('graded_on', models.DateTimeField(
                    auto_now_add=True, verbose_name='graded on')),
                ('assignment', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE, to='api.Assignment', verbose_name='assignment')),
                ('guide', models.OneToOneField(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='api.Guide', verbose_name='guide')),
                ('students', models.ForeignKey(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='api.Student', verbose_name='students')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='coordinator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING,
                                    to='api.Coordinator', verbose_name='coordinator'),
        ),
        migrations.RunPython(apply_migration, revert_migration)
    ]
